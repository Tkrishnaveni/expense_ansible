- name: configure backend server
  hosts: backend
  become: true
  tasks:
  - name: disable current nodejs 
    ansible.builtin.command: "dnf module disable nodejs -y"
  - name: enable nodejs
    ansible.builtin.command: "dnf module enable nodejs:20 -y"
  - name: install nodejs
    ansible.builtin.package:
     name: "{{item}}"
     state: installed
    loop:
     - nodejs
     - mysql
  
  - name: create expense user
    ansible.builtin.user:
     name: expense
  - name: create appdirectory
    ansible.builtin.file:
     name: /app
     state: directory
  - name: Downloading application code
    ansible.builtin.get_url:
     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
     dest: /tmp/backend.zip
  - name: unzip downloaded application code
    ansible.builtin.unarchive:
     src: /tmp/backend.zip
     dest: /app
     remote_src: yes
  - name: install dependenices
    community.general.npm:
     path: /app
  - name: copy backend service
    ansible.builtin.copy:
     src: backend.service
     dest: /etc/systemd/system/backend.service
  - name: install pip libraries
    ansible.builtin.pip:
     name: "{{item}}"
     executable: pip3.9
    loop:
     - pymysql
     - cryptography 
  - name: import mysql data
    community.mysql.mysql_db:
     state: import
     name: all
     login_user: root
     login_password: ExpenseApp@1
     login_host: 44.205.252.182 
     target: /app/schema/backend.sql
  - name: daemon reload and restart service
    ansible.builtin.systemd_service:
     state: restarted
     daemon_reload: true
     enabled: true
     name: backend